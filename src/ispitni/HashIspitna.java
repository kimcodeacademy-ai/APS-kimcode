//–ó–∞–¥–∞—á–∞ 1. –ï–ø–∏–¥–µ–º–∏j–∞
//–ü–æ—Ä–∞–¥–∏ –µ–ø–∏–¥–µ–º–∏j–∞ –Ω–∞ —Å–µ–∑–æ–Ω—Å–∫–∏ –≥—Ä–∏–ø –ø—Ä–∏ —Å–µ–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–∞—ö–µ –Ω–∞ –¥–∞–¥–µ–Ω –ø–∞—Ü–∏–µ–Ω—Ç —Å–µ
//–∑–∞—á—É–≤—É–≤–∞ –æ–ø—à—Ç–∏–Ω–∞—Ç–∞ –≤–æ –∫–æj–∞ –∂–∏–≤–µ–µ, –Ω–µ–≥–æ–≤–æ—Ç–æ –ø—Ä–µ–∑–∏–º–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏j–∞ –¥–∞–ª–∏ –µ –ø–æ–∑–∏—Ç–∏–≤–µ–Ω –∏–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–µ–Ω –Ω–∞ –≤–∏—Ä—É—Å–æ—Ç. –ü–æ—Ç—Ä–µ–±–Ω–∏ —Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–∫–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ –¥–∞ —Å–µ
//–æ–¥—Ä–µ–¥–∏ —Ä–∏–∑–∏–∫ —Ñ–∞–∫—Ç–æ—Ä–æ—Ç –∑–∞ –¥–∞–¥–µ–Ω–∞ –æ–ø—à—Ç–∏–Ω–∞. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ –µ –∑–∞ –¥–∞–¥–µ–Ω–∞ –æ–ø—à—Ç–∏–Ω–∞ –Ω–∞
//–∏–∑–ª–µ–∑ –¥–∞ –≥–æ –∏—Å–ø–µ—á–∞—Ç–∏—Ç–µ —Ä–∏–∑–∏–∫ —Ñ–∞–∫—Ç–æ—Ä–æ—Ç –≤–æ –¥–∞–¥–µ–Ω–∞—Ç–∞ –æ–ø—à—Ç–∏–Ω–∞. –†–∏–∑–∏–∫ —Ñ–∞–∫—Ç–æ—Ä–æ—Ç
//—Å–µ –ø—Ä–µ—Å–º–µ—Ç—É–≤–∞ –Ω–∞ —Å–ª–µ–¥–Ω–∏–æ—Ç –Ω–∞—á–∏–Ω:
//–†–∏–∑–∏–∫ —Ñ–∞–∫—Ç–æ—Ä =
//        –±—Ä–æj –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∏ /
//–±—Ä–æj –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∏ + –±—Ä–æj –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∏
//–ó–∞–±–µ–ª–µ—à–∫–∞: –ú–æ–∂–Ω–æ –µ –¥–∞ —Å–µ –ø–æj–∞–≤–∞—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∏ —Å–æ –∏—Å—Ç–æ –ø—Ä–µ–∑–∏–º–µ. –ò—Å—Ç–∏—Ç–µ —Ç—Ä–µ–±–∞
//–¥–∞ —Å–µ –∑–µ–º–∞—Ç –∫–∞–∫–æ –ø–æ—Å–µ–±–Ω–∏ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –≤–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Ç–∞.
//–í–ª–µ–∑: –ù–∞ –≤–ª–µ–∑ –Ω–∞j–ø—Ä–≤–æ –µ –¥–∞–¥–µ–Ω –±—Ä–æj–æ—Ç –Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∏ ùëÅ, –∞ –ø–æ—Ç–æ–∞ —Å–µ–∫–æj –ø–∞—Ü–∏–µ–Ω—Ç –µ
//–¥–∞–¥–µ–Ω –≤–æ –Ω–æ–≤ —Ä–µ–¥ –≤–æ —Ñ–æ—Ä–º–∞—Ç–æ—Ç: ‚Äû–û–ø—à—Ç–∏–Ω–∞ –≤–æ –∫–æj–∞ –∂–∏–≤–µ–µ‚Äù ‚Äû–ü—Ä–µ–∑–∏–º–µ –Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç‚Äù
//        ‚Äû–†–µ–∑—É–ª—Ç–∞—Ç–∏ –æ–¥ —Ç–µ—Å—Ç–æ—Ç(positive/negative)‚Äù. –ù–∞ –∫—Ä–∞j –µ –¥–∞–¥–µ–Ω–∞ –æ–ø—à—Ç–∏–Ω–∞—Ç–∞ –∑–∞ –∫–æj–∞
//—Ç—Ä–µ–±–∞ –¥–∞ —Å–µ –ø—Ä–µ—Å–º–µ—Ç–∞ —Ä–∏–∑–∏–∫ —Ñ–∞–∫—Ç–æ—Ä–æ—Ç.
//–ò–∑–ª–µ–∑: –î–µ—Ü–∏–º–∞–ª–µ–Ω –±—Ä–æj –∑–∞–æ–∫—Ä—É–∂–µ–Ω –Ω–∞ –¥–≤–µ –¥–µ—Ü–∏–º–∞–ª–∏ –∫–æj –≥–æ –ø—Ä–µ—Ç—Å—Ç–∞–≤—É–≤–∞ —Ä–∏–∑–∏–∫
//—Ñ–∞–∫—Ç–æ—Ä–æ—Ç –∑–∞ –¥–∞–¥–µ–Ω–∞—Ç–∞ –æ–ø—à—Ç–∏–Ω–∞.
//–ü—Ä–∏–º–µ—Ä:
//–í–ª–µ–∑:
//        182
//–ü–æ–¥–∞—Ç–æ—á–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
//6
//Centar Stojanoski negative
//Centar Trajkovski positive
//Centar Petkovski positive
//Karpos Stojanoski positive
//Karpos Trajkovski negative
//Centar Trajkovski positive
//        Centar
//–ò–∑–ª–µ–∑:
//        0.75


//6
//Centar Stojanoski negative
//Centar Trajkovski positive
//Centar Petkovski positive
//Karpos Stojanoski positive
//Karpos Trajkovski negative
//Centar Trajkovski positive



package ispitni;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

// key:String(Naselba) , value: Integer (Broj na pacienti zarazeni po opstina)
public class HashIspitna {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        CBHT<String, Integer> positivePatients = new CBHT<>(2*N);
        CBHT<String, Integer> negativePatients = new CBHT<>(2*N);

        for(int i = 0; i < N; i++){
            String input [] = br.readLine().split(" ");
            if(input[2].equals("positive")){
                SLLNode<MapEntry<String, Integer>> pozPaci = positivePatients.search(input[0]);
                if(pozPaci != null){
                    Integer numPositive = pozPaci.element.value+1;
                    positivePatients.insert(input[0], numPositive);
                }
                else{
                    positivePatients.insert(input[0], 1);
                }
            }
            else{
                SLLNode<MapEntry<String, Integer>> negPaci = negativePatients.search(input[0]);
                if(negPaci != null){
                    Integer numNegative = negPaci.element.value+1;
                    negativePatients.insert(input[0], numNegative);
                }
                else{
                    negativePatients.insert(input[0], 1);
                }
            }
        }

//        System.out.println(positivePatients.toString());
//        System.out.println(negativePatients.toString());

        String opstina = br.readLine();
        SLLNode<MapEntry<String, Integer>> pozPaci = positivePatients.search(opstina);
        SLLNode<MapEntry<String, Integer>> negPaci = negativePatients.search(opstina);

        Integer pozitivni = pozPaci.element.value;
        Integer negativni = negPaci.element.value;

        System.out.println(String.format("%.2f", pozitivni * 1.00 / (negativni+pozitivni)));

    }
}
